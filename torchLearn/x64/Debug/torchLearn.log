  Darknet.cpp
e:\pyl\torch\include\c10\util\exception.h(27): warning C4275: 非 dll 接口 class“std::exception”用作 dll 接口 class“c10::Error”的基
  d:\program files (x86)\microsoft visual studio\preview\professional\vc\tools\msvc\14.11.25503\include\vcruntime_exception.h(43): note: 参见“std::exception”的声明
  e:\pyl\torch\include\c10\util\exception.h(27): note: 参见“c10::Error”的声明
e:\pyl\torch\include\c10\util\exception.h(28): warning C4251: “c10::Error::msg_stack_”: class“std::vector<std::string,std::allocator<_Ty>>”需要有 dll 接口由 class“c10::Error”的客户端使用
          with
          [
              _Ty=std::string
          ]
  e:\pyl\torch\include\c10\util\exception.h(28): note: 参见“std::vector<std::string,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=std::string
          ]
e:\pyl\torch\include\c10\util\exception.h(29): warning C4251: “c10::Error::backtrace_”: class“std::basic_string<char,std::char_traits<char>,std::allocator<char>>”需要有 dll 接口由 class“c10::Error”的客户端使用
  d:\program files (x86)\microsoft visual studio\preview\professional\vc\tools\msvc\14.11.25503\include\xstring(4079): note: 参见“std::basic_string<char,std::char_traits<char>,std::allocator<char>>”的声明
e:\pyl\torch\include\c10\util\exception.h(34): warning C4251: “c10::Error::msg_”: class“std::basic_string<char,std::char_traits<char>,std::allocator<char>>”需要有 dll 接口由 class“c10::Error”的客户端使用
  d:\program files (x86)\microsoft visual studio\preview\professional\vc\tools\msvc\14.11.25503\include\xstring(4079): note: 参见“std::basic_string<char,std::char_traits<char>,std::allocator<char>>”的声明
e:\pyl\torch\include\c10\util\exception.h(35): warning C4251: “c10::Error::msg_without_backtrace_”: class“std::basic_string<char,std::char_traits<char>,std::allocator<char>>”需要有 dll 接口由 class“c10::Error”的客户端使用
  d:\program files (x86)\microsoft visual studio\preview\professional\vc\tools\msvc\14.11.25503\include\xstring(4079): note: 参见“std::basic_string<char,std::char_traits<char>,std::allocator<char>>”的声明
e:\pyl\torch\include\c10\core\allocator.h(126): warning C4251: “c10::InefficientStdFunctionContext::ptr_”: class“std::unique_ptr<void,std::function<void (void *)>>”需要有 dll 接口由 struct“c10::InefficientStdFunctionContext”的客户端使用
  e:\pyl\torch\include\c10\core\allocator.h(126): note: 参见“std::unique_ptr<void,std::function<void (void *)>>”的声明
e:\pyl\torch\include\c10\core\tensortypeidregistration.h(32): warning C4251: “c10::TensorTypeIdCreator::last_id_”: struct“std::atomic<unsigned char>”需要有 dll 接口由 class“c10::TensorTypeIdCreator”的客户端使用
  d:\program files (x86)\microsoft visual studio\preview\professional\vc\tools\msvc\14.11.25503\include\xxatomic(184): note: 参见“std::atomic<unsigned char>”的声明
e:\pyl\torch\include\c10\core\tensortypeidregistration.h(45): warning C4251: “c10::TensorTypeIdRegistry::registeredTypeIds_”: class“std::unordered_set<c10::TensorTypeId,std::hash<c10::TensorTypeId>,std::equal_to<_Kty>,std::allocator<_Kty>>”需要有 dll 接口由 class“c10::TensorTypeIdRegistry”的客户端使用
          with
          [
              _Kty=c10::TensorTypeId
          ]
  e:\pyl\torch\include\c10\core\tensortypeidregistration.h(45): note: 参见“std::unordered_set<c10::TensorTypeId,std::hash<c10::TensorTypeId>,std::equal_to<_Kty>,std::allocator<_Kty>>”的声明
          with
          [
              _Kty=c10::TensorTypeId
          ]
e:\pyl\torch\include\c10\core\tensortypeidregistration.h(46): warning C4251: “c10::TensorTypeIdRegistry::mutex_”: class“std::mutex”需要有 dll 接口由 class“c10::TensorTypeIdRegistry”的客户端使用
  d:\program files (x86)\microsoft visual studio\preview\professional\vc\tools\msvc\14.11.25503\include\mutex(80): note: 参见“std::mutex”的声明
e:\pyl\torch\include\c10\half-inl.h(168): warning C4244: “参数”: 从“int”转换到“float”，可能丢失数据
e:\pyl\torch\include\c10\half-inl.h(171): warning C4244: “参数”: 从“int”转换到“float”，可能丢失数据
e:\pyl\torch\include\c10\half-inl.h(174): warning C4244: “参数”: 从“int”转换到“float”，可能丢失数据
e:\pyl\torch\include\c10\half-inl.h(177): warning C4244: “参数”: 从“int”转换到“float”，可能丢失数据
e:\pyl\torch\include\c10\half-inl.h(181): warning C4244: “参数”: 从“int”转换到“float”，可能丢失数据
e:\pyl\torch\include\c10\half-inl.h(184): warning C4244: “参数”: 从“int”转换到“float”，可能丢失数据
e:\pyl\torch\include\c10\half-inl.h(187): warning C4244: “参数”: 从“int”转换到“float”，可能丢失数据
e:\pyl\torch\include\c10\half-inl.h(190): warning C4244: “参数”: 从“int”转换到“float”，可能丢失数据
e:\pyl\torch\include\c10\half-inl.h(196): warning C4244: “参数”: 从“int64_t”转换到“float”，可能丢失数据
e:\pyl\torch\include\c10\half-inl.h(199): warning C4244: “参数”: 从“int64_t”转换到“float”，可能丢失数据
e:\pyl\torch\include\c10\half-inl.h(202): warning C4244: “参数”: 从“int64_t”转换到“float”，可能丢失数据
e:\pyl\torch\include\c10\half-inl.h(205): warning C4244: “参数”: 从“int64_t”转换到“float”，可能丢失数据
e:\pyl\torch\include\c10\half-inl.h(209): warning C4244: “参数”: 从“int64_t”转换到“float”，可能丢失数据
e:\pyl\torch\include\c10\half-inl.h(212): warning C4244: “参数”: 从“int64_t”转换到“float”，可能丢失数据
e:\pyl\torch\include\c10\half-inl.h(215): warning C4244: “参数”: 从“int64_t”转换到“float”，可能丢失数据
e:\pyl\torch\include\c10\half-inl.h(218): warning C4244: “参数”: 从“int64_t”转换到“float”，可能丢失数据
e:\pyl\torch\include\c10\util\intrusive_ptr.h(58): warning C4251: “c10::intrusive_ptr_target::refcount_”: struct“std::atomic<unsigned __int64>”需要有 dll 接口由 class“c10::intrusive_ptr_target”的客户端使用
  d:\program files (x86)\microsoft visual studio\preview\professional\vc\tools\msvc\14.11.25503\include\xxatomic(184): note: 参见“std::atomic<unsigned __int64>”的声明
e:\pyl\torch\include\c10\util\intrusive_ptr.h(59): warning C4251: “c10::intrusive_ptr_target::weakcount_”: struct“std::atomic<unsigned __int64>”需要有 dll 接口由 class“c10::intrusive_ptr_target”的客户端使用
  d:\program files (x86)\microsoft visual studio\preview\professional\vc\tools\msvc\14.11.25503\include\xxatomic(184): note: 参见“std::atomic<unsigned __int64>”的声明
e:\pyl\torch\include\c10\util\intrusive_ptr.h(708): warning C4267: “return”: 从“size_t”转换到“uint32_t”，可能丢失数据
e:\pyl\torch\include\c10\util\intrusive_ptr.h(742): warning C4267: “return”: 从“size_t”转换到“uint32_t”，可能丢失数据
e:\pyl\torch\include\c10\core\storageimpl.h(215): warning C4251: “c10::StorageImpl::data_ptr_”: class“c10::DataPtr”需要有 dll 接口由 struct“c10::StorageImpl”的客户端使用
  e:\pyl\torch\include\c10\core\allocator.h(19): note: 参见“c10::DataPtr”的声明
e:\pyl\torch\include\c10\core\storage.h(184): warning C4251: “c10::Storage::storage_impl_”: class“c10::intrusive_ptr<c10::StorageImpl,c10::detail::intrusive_target_default_null_type<TTarget>>”需要有 dll 接口由 struct“c10::Storage”的客户端使用
          with
          [
              TTarget=c10::StorageImpl
          ]
  e:\pyl\torch\include\c10\core\storage.h(10): note: 参见“c10::intrusive_ptr<c10::StorageImpl,c10::detail::intrusive_target_default_null_type<TTarget>>”的声明
          with
          [
              TTarget=c10::StorageImpl
          ]
e:\pyl\torch\include\c10\util\logging_is_not_google_glog.h(47): warning C4251: “c10::MessageLogger::stream_”: class“std::basic_stringstream<char,std::char_traits<char>,std::allocator<char>>”需要有 dll 接口由 class“c10::MessageLogger”的客户端使用
  d:\program files (x86)\microsoft visual studio\preview\professional\vc\tools\msvc\14.11.25503\include\iosfwd(633): note: 参见“std::basic_stringstream<char,std::char_traits<char>,std::allocator<char>>”的声明
e:\pyl\torch\include\aten\core\tensorimpl.h(115): warning C4251: “at::PlacementDeleteContext::data_ptr_”: class“c10::DataPtr”需要有 dll 接口由 struct“at::PlacementDeleteContext”的客户端使用
  e:\pyl\torch\include\c10\core\allocator.h(19): note: 参见“c10::DataPtr”的声明
e:\pyl\torch\include\aten\core\tensorimpl.h(1434): warning C4251: “at::TensorImpl::sizes_”: class“c10::SmallVector<int64_t,5>”需要有 dll 接口由 struct“at::TensorImpl”的客户端使用
  e:\pyl\torch\include\aten\core\tensorimpl.h(1434): note: 参见“c10::SmallVector<int64_t,5>”的声明
e:\pyl\torch\include\aten\core\tensorimpl.h(1435): warning C4251: “at::TensorImpl::strides_”: class“c10::SmallVector<int64_t,5>”需要有 dll 接口由 struct“at::TensorImpl”的客户端使用
  e:\pyl\torch\include\aten\core\tensorimpl.h(1434): note: 参见“c10::SmallVector<int64_t,5>”的声明
e:\pyl\torch\include\aten\core\tensorimpl.h(454): warning C4244: “参数”: 从“int64_t”转换到“c10::DeviceIndex”，可能丢失数据
e:\pyl\torch\include\aten\core\tensorimpl.h(1006): warning C4244: “参数”: 从“float”转换到“const size_t”，可能丢失数据
e:\pyl\torch\include\aten\core\tensorimpl.h(1382): warning C4244: “初始化”: 从“int64_t”转换到“int”，可能丢失数据
e:\pyl\torch\include\aten\core\legacytypedispatch.h(138): warning C4251: “at::LegacyTypeDispatch::type_registry”: class“std::unique_ptr<at::Type,at::LegacyTypeDeleter>”需要有 dll 接口由 class“at::LegacyTypeDispatch”的客户端使用
  e:\pyl\torch\include\aten\core\legacytypedispatch.h(51): note: 参见“std::unique_ptr<at::Type,at::LegacyTypeDeleter>”的声明
e:\pyl\torch\include\aten\core\tensor.h(692): warning C4251: “at::Tensor::impl_”: class“c10::intrusive_ptr<at::TensorImpl,at::UndefinedTensorImpl>”需要有 dll 接口由 class“at::Tensor”的客户端使用
  e:\pyl\torch\include\aten\core\tensor.h(44): note: 参见“c10::intrusive_ptr<at::TensorImpl,at::UndefinedTensorImpl>”的声明
e:\pyl\torch\include\aten\core\tensor.h(693): warning C4522: “at::Tensor”: 指定了多个赋值运算符
e:\pyl\torch\include\aten\core\tensor.h(720): warning C4251: “at::WeakTensor::weak_impl_”: class“c10::weak_intrusive_ptr<TTarget,NullType>”需要有 dll 接口由 struct“at::WeakTensor”的客户端使用
          with
          [
              TTarget=at::TensorImpl,
              NullType=at::UndefinedTensorImpl
          ]
  e:\pyl\torch\include\c10\util\intrusive_ptr.h(172): note: 参见“c10::weak_intrusive_ptr<TTarget,NullType>”的声明
          with
          [
              TTarget=at::TensorImpl,
              NullType=at::UndefinedTensorImpl
          ]
e:\pyl\torch\include\aten\legacythdispatch.h(86): warning C4251: “at::LegacyTHDispatch::dispatcher_registry”: class“std::unique_ptr<at::LegacyTHDispatcher,at::LegacyTHDispatcherDeleter>”需要有 dll 接口由 class“at::LegacyTHDispatch”的客户端使用
  e:\pyl\torch\include\aten\legacythdispatch.h(61): note: 参见“std::unique_ptr<at::LegacyTHDispatcher,at::LegacyTHDispatcherDeleter>”的声明
e:\pyl\torch\include\aten\context.h(128): warning C4251: “at::Context::generator_registry”: class“std::unique_ptr<at::Generator,std::default_delete<_Ty>>”需要有 dll 接口由 class“at::Context”的客户端使用
          with
          [
              _Ty=at::Generator
          ]
  e:\pyl\torch\include\aten\core\type.h(104): note: 参见“std::unique_ptr<at::Generator,std::default_delete<_Ty>>”的声明
          with
          [
              _Ty=at::Generator
          ]
e:\pyl\torch\include\aten\context.h(145): warning C4251: “at::Context::thc_init”: struct“std::once_flag”需要有 dll 接口由 class“at::Context”的客户端使用
  d:\program files (x86)\microsoft visual studio\preview\professional\vc\tools\msvc\14.11.25503\include\xcall_once.h(18): note: 参见“std::once_flag”的声明
e:\pyl\torch\include\aten\context.h(146): warning C4251: “at::Context::thh_init”: struct“std::once_flag”需要有 dll 接口由 class“at::Context”的客户端使用
  d:\program files (x86)\microsoft visual studio\preview\professional\vc\tools\msvc\14.11.25503\include\xcall_once.h(18): note: 参见“std::once_flag”的声明
e:\pyl\torch\include\aten\context.h(147): warning C4251: “at::Context::complex_init_”: struct“std::once_flag”需要有 dll 接口由 class“at::Context”的客户端使用
  d:\program files (x86)\microsoft visual studio\preview\professional\vc\tools\msvc\14.11.25503\include\xcall_once.h(18): note: 参见“std::once_flag”的声明
e:\pyl\torch\include\aten\context.h(151): warning C4251: “at::Context::next_id”: struct“std::atomic<unsigned __int64>”需要有 dll 接口由 class“at::Context”的客户端使用
  d:\program files (x86)\microsoft visual studio\preview\professional\vc\tools\msvc\14.11.25503\include\xxatomic(184): note: 参见“std::atomic<unsigned __int64>”的声明
e:\pyl\torch\include\aten\context.h(152): warning C4251: “at::Context::thc_state”: class“std::unique_ptr<THCState,void (__cdecl *)(THCState *)>”需要有 dll 接口由 class“at::Context”的客户端使用
  e:\pyl\torch\include\aten\detail\cudahooksinterface.h(57): note: 参见“std::unique_ptr<THCState,void (__cdecl *)(THCState *)>”的声明
e:\pyl\torch\include\aten\context.h(153): warning C4251: “at::Context::thh_state”: class“std::unique_ptr<THHState,void (__cdecl *)(THHState *)>”需要有 dll 接口由 class“at::Context”的客户端使用
  e:\pyl\torch\include\aten\detail\hiphooksinterface.h(33): note: 参见“std::unique_ptr<THHState,void (__cdecl *)(THHState *)>”的声明
e:\pyl\torch\include\c10\stream.h(102): warning C4244: “参数”: 从“unsigned __int64”转换到“c10::DeviceIndex”，可能丢失数据
e:\pyl\torch\include\c10\stream.h(102): warning C4244: “参数”: 从“unsigned __int64”转换到“c10::StreamId”，可能丢失数据
e:\pyl\torch\include\aten\tensorgeometry.h(56): warning C4251: “at::TensorGeometry::sizes_”: class“std::vector<int64_t,std::allocator<_Ty>>”需要有 dll 接口由 struct“at::TensorGeometry”的客户端使用
          with
          [
              _Ty=int64_t
          ]
  e:\pyl\torch\include\c10\util\typeid.h(584): note: 参见“std::vector<int64_t,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=int64_t
          ]
e:\pyl\torch\include\aten\tensorgeometry.h(57): warning C4251: “at::TensorGeometry::strides_”: class“std::vector<int64_t,std::allocator<_Ty>>”需要有 dll 接口由 struct“at::TensorGeometry”的客户端使用
          with
          [
              _Ty=int64_t
          ]
  e:\pyl\torch\include\c10\util\typeid.h(584): note: 参见“std::vector<int64_t,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=int64_t
          ]
e:\pyl\torch\include\torch\csrc\autograd\variable.h(351): warning C4251: “torch::autograd::Variable::Impl::name”: class“std::basic_string<char,std::char_traits<char>,std::allocator<char>>”需要有 dll 接口由 struct“torch::autograd::Variable::Impl”的客户端使用
  d:\program files (x86)\microsoft visual studio\preview\professional\vc\tools\msvc\14.11.25503\include\xstring(4079): note: 参见“std::basic_string<char,std::char_traits<char>,std::allocator<char>>”的声明
e:\pyl\torch\include\torch\csrc\autograd\variable.h(355): warning C4251: “torch::autograd::Variable::Impl::grad_fn_”: class“std::shared_ptr<torch::autograd::Function>”需要有 dll 接口由 struct“torch::autograd::Variable::Impl”的客户端使用
  e:\pyl\torch\include\torch\csrc\autograd\edge.h(17): note: 参见“std::shared_ptr<torch::autograd::Function>”的声明
e:\pyl\torch\include\torch\csrc\autograd\variable.h(356): warning C4251: “torch::autograd::Variable::Impl::grad_accumulator_”: class“std::weak_ptr<_Ty>”需要有 dll 接口由 struct“torch::autograd::Variable::Impl”的客户端使用
          with
          [
              _Ty=torch::autograd::Function
          ]
  d:\program files (x86)\microsoft visual studio\preview\professional\vc\tools\msvc\14.11.25503\include\memory(1326): note: 参见“std::weak_ptr<_Ty>”的声明
          with
          [
              _Ty=torch::autograd::Function
          ]
e:\pyl\torch\include\torch\csrc\autograd\variable.h(358): warning C4251: “torch::autograd::Variable::Impl::version_counter_”: struct“torch::autograd::VariableVersion”需要有 dll 接口由 struct“torch::autograd::Variable::Impl”的客户端使用
  e:\pyl\torch\include\torch\csrc\autograd\variable_version.h(19): note: 参见“torch::autograd::VariableVersion”的声明
e:\pyl\torch\include\torch\csrc\autograd\variable.h(359): warning C4251: “torch::autograd::Variable::Impl::hooks_”: class“std::vector<std::shared_ptr<torch::autograd::FunctionPreHook>,std::allocator<_Ty>>”需要有 dll 接口由 struct“torch::autograd::Variable::Impl”的客户端使用
          with
          [
              _Ty=std::shared_ptr<torch::autograd::FunctionPreHook>
          ]
  e:\pyl\torch\include\torch\csrc\autograd\variable.h(245): note: 参见“std::vector<std::shared_ptr<torch::autograd::FunctionPreHook>,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=std::shared_ptr<torch::autograd::FunctionPreHook>
          ]
e:\pyl\torch\include\torch\csrc\autograd\variable.h(376): warning C4251: “torch::autograd::Variable::Impl::mutex_”: class“std::mutex”需要有 dll 接口由 struct“torch::autograd::Variable::Impl”的客户端使用
  d:\program files (x86)\microsoft visual studio\preview\professional\vc\tools\msvc\14.11.25503\include\mutex(80): note: 参见“std::mutex”的声明
e:\pyl\torch\include\aten\core\thread_pool.h(51): warning C4251: “c10::ThreadPool::tasks_”: class“std::queue<c10::ThreadPool::task_element_t,std::deque<_Ty,std::allocator<_Ty>>>”需要有 dll 接口由 class“c10::ThreadPool”的客户端使用
          with
          [
              _Ty=c10::ThreadPool::task_element_t
          ]
  e:\pyl\torch\include\aten\core\thread_pool.h(51): note: 参见“std::queue<c10::ThreadPool::task_element_t,std::deque<_Ty,std::allocator<_Ty>>>”的声明
          with
          [
              _Ty=c10::ThreadPool::task_element_t
          ]
e:\pyl\torch\include\aten\core\thread_pool.h(52): warning C4251: “c10::ThreadPool::threads_”: class“std::vector<std::thread,std::allocator<_Ty>>”需要有 dll 接口由 class“c10::ThreadPool”的客户端使用
          with
          [
              _Ty=std::thread
          ]
  e:\pyl\torch\include\aten\core\thread_pool.h(52): note: 参见“std::vector<std::thread,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=std::thread
          ]
e:\pyl\torch\include\aten\core\thread_pool.h(53): warning C4251: “c10::ThreadPool::mutex_”: class“std::mutex”需要有 dll 接口由 class“c10::ThreadPool”的客户端使用
  d:\program files (x86)\microsoft visual studio\preview\professional\vc\tools\msvc\14.11.25503\include\mutex(80): note: 参见“std::mutex”的声明
e:\pyl\torch\include\aten\core\thread_pool.h(54): warning C4251: “c10::ThreadPool::condition_”: class“std::condition_variable”需要有 dll 接口由 class“c10::ThreadPool”的客户端使用
  d:\program files (x86)\microsoft visual studio\preview\professional\vc\tools\msvc\14.11.25503\include\mutex(678): note: 参见“std::condition_variable”的声明
e:\pyl\torch\include\aten\core\thread_pool.h(55): warning C4251: “c10::ThreadPool::completed_”: class“std::condition_variable”需要有 dll 接口由 class“c10::ThreadPool”的客户端使用
  d:\program files (x86)\microsoft visual studio\preview\professional\vc\tools\msvc\14.11.25503\include\mutex(678): note: 参见“std::condition_variable”的声明
e:\pyl\torch\include\aten\core\ivalue.h(24): warning C4251: “c10::ivalue::ConstantString::str_”: class“std::basic_string<char,std::char_traits<char>,std::allocator<char>>”需要有 dll 接口由 struct“c10::ivalue::ConstantString”的客户端使用
  d:\program files (x86)\microsoft visual studio\preview\professional\vc\tools\msvc\14.11.25503\include\xstring(4079): note: 参见“std::basic_string<char,std::char_traits<char>,std::allocator<char>>”的声明
e:\pyl\torch\include\aten\core\ivalue.h(43): warning C4251: “c10::ivalue::List<Elem>::elements_”: class“std::vector<T,std::allocator<_Ty>>”需要有 dll 接口由 struct“c10::ivalue::List<Elem>”的客户端使用
  e:\pyl\torch\include\c10\util\arrayref.h(214): note: 参见“std::vector<T,std::allocator<_Ty>>”的声明
  e:\pyl\torch\include\aten\core\ivalue.h(65): note: 参见对正在编译的 类 模板 实例化 "c10::ivalue::List<Elem>" 的引用
e:\pyl\torch\include\aten\core\ivalue.h(43): warning C4251: “c10::ivalue::List<c10::IValue>::elements_”: class“std::vector<Elem,std::allocator<_Ty>>”需要有 dll 接口由 struct“c10::ivalue::List<c10::IValue>”的客户端使用
          with
          [
              Elem=c10::IValue,
              _Ty=c10::IValue
          ]
  e:\pyl\torch\include\aten\core\ivalue.h(43): note: 参见“std::vector<Elem,std::allocator<_Ty>>”的声明
          with
          [
              Elem=c10::IValue,
              _Ty=c10::IValue
          ]
  e:\pyl\torch\include\aten\core\ivalue.h(69): note: 参见对正在编译的 类 模板 实例化 "c10::ivalue::List<c10::IValue>" 的引用
e:\pyl\torch\include\aten\core\ivalue.h(570): warning C4251: “c10::ivalue::Future::mutex_”: class“std::mutex”需要有 dll 接口由 struct“c10::ivalue::Future”的客户端使用
  d:\program files (x86)\microsoft visual studio\preview\professional\vc\tools\msvc\14.11.25503\include\mutex(80): note: 参见“std::mutex”的声明
e:\pyl\torch\include\aten\core\ivalue.h(572): warning C4251: “c10::ivalue::Future::completed_”: struct“std::atomic<bool>”需要有 dll 接口由 struct“c10::ivalue::Future”的客户端使用
  d:\program files (x86)\microsoft visual studio\preview\professional\vc\tools\msvc\14.11.25503\include\xxatomic(184): note: 参见“std::atomic<bool>”的声明
e:\pyl\torch\include\aten\core\ivalue.h(573): warning C4251: “c10::ivalue::Future::callbacks”: class“std::vector<std::function<void (void)>,std::allocator<_Ty>>”需要有 dll 接口由 struct“c10::ivalue::Future”的客户端使用
          with
          [
              _Ty=std::function<void (void)>
          ]
  e:\pyl\torch\include\aten\core\ivalue.h(573): note: 参见“std::vector<std::function<void (void)>,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=std::function<void (void)>
          ]
e:\pyl\torch\include\aten\core\ivalue.h(602): warning C4244: “return”: 从“double”转换到“float”，可能丢失数据
e:\pyl\torch\include\aten\core\ivalue.h(604): warning C4244: “return”: 从“int64_t”转换到“unsigned char”，可能丢失数据
e:\pyl\torch\include\aten\core\ivalue.h(605): warning C4244: “return”: 从“int64_t”转换到“signed char”，可能丢失数据
e:\pyl\torch\include\aten\core\ivalue.h(606): warning C4244: “return”: 从“int64_t”转换到“unsigned short”，可能丢失数据
e:\pyl\torch\include\aten\core\ivalue.h(607): warning C4244: “return”: 从“int64_t”转换到“short”，可能丢失数据
e:\pyl\torch\include\aten\core\ivalue.h(608): warning C4244: “return”: 从“int64_t”转换到“int”，可能丢失数据
e:\pyl\torch\include\aten\core\ivalue.h(609): warning C4244: “return”: 从“int64_t”转换到“uint32_t”，可能丢失数据
e:\pyl\torch\include\aten\core\ivalue.h(611): warning C4244: “return”: 从“int64_t”转换到“c10::detail::_guarded_unsigned_long”，可能丢失数据
e:\pyl\torch\include\aten\core\ivalue.h(43): warning C4251: “c10::ivalue::List<int64_t>::elements_”: class“std::vector<int64_t,std::allocator<_Ty>>”需要有 dll 接口由 struct“c10::ivalue::List<int64_t>”的客户端使用
          with
          [
              _Ty=int64_t
          ]
  e:\pyl\torch\include\c10\util\typeid.h(584): note: 参见“std::vector<int64_t,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=int64_t
          ]
  e:\pyl\torch\include\aten\core\ivalue.h(643): note: 参见对正在编译的 类 模板 实例化 "c10::ivalue::List<int64_t>" 的引用
e:\pyl\torch\include\aten\core\ivalue.h(43): warning C4251: “c10::ivalue::List<double>::elements_”: class“std::vector<T,std::allocator<_Ty>>”需要有 dll 接口由 struct“c10::ivalue::List<double>”的客户端使用
          with
          [
              T=double,
              _Ty=double
          ]
  e:\pyl\torch\include\c10\util\arrayref.h(214): note: 参见“std::vector<T,std::allocator<_Ty>>”的声明
          with
          [
              T=double,
              _Ty=double
          ]
  e:\pyl\torch\include\aten\core\ivalue.h(657): note: 参见对正在编译的 类 模板 实例化 "c10::ivalue::List<double>" 的引用
e:\pyl\torch\include\aten\core\ivalue.h(43): warning C4251: “c10::ivalue::List<bool>::elements_”: class“std::vector<bool,std::allocator<_Ty>>”需要有 dll 接口由 struct“c10::ivalue::List<bool>”的客户端使用
          with
          [
              _Ty=bool
          ]
  e:\pyl\torch\include\aten\core\ivalue.h(296): note: 参见“std::vector<bool,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=bool
          ]
  e:\pyl\torch\include\aten\core\ivalue.h(664): note: 参见对正在编译的 类 模板 实例化 "c10::ivalue::List<bool>" 的引用
e:\pyl\torch\include\aten\core\ivalue.h(43): warning C4251: “c10::ivalue::List<at::Tensor>::elements_”: class“std::vector<at::Tensor,std::allocator<_Ty>>”需要有 dll 接口由 struct“c10::ivalue::List<at::Tensor>”的客户端使用
          with
          [
              _Ty=at::Tensor
          ]
  e:\pyl\torch\include\aten\core\type.h(227): note: 参见“std::vector<at::Tensor,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=at::Tensor
          ]
  e:\pyl\torch\include\aten\core\ivalue.h(671): note: 参见对正在编译的 类 模板 实例化 "c10::ivalue::List<at::Tensor>" 的引用
e:\pyl\torch\include\torch\csrc\jit\scope.h(24): warning C4251: “torch::jit::Scope::parent_”: class“c10::intrusive_ptr<torch::jit::Scope,c10::detail::intrusive_target_default_null_type<TTarget>>”需要有 dll 接口由 struct“torch::jit::Scope”的客户端使用
          with
          [
              TTarget=torch::jit::Scope
          ]
  e:\pyl\torch\include\torch\csrc\jit\scope.h(20): note: 参见“c10::intrusive_ptr<torch::jit::Scope,c10::detail::intrusive_target_default_null_type<TTarget>>”的声明
          with
          [
              TTarget=torch::jit::Scope
          ]
e:\pyl\torch\include\torch\csrc\jit\constants.h(16): warning C4275: 非 dll 接口 class“std::runtime_error”用作 dll 接口 struct“torch::jit::constant_not_supported_error”的基
  d:\program files (x86)\microsoft visual studio\preview\professional\vc\tools\msvc\14.11.25503\include\stdexcept(157): note: 参见“std::runtime_error”的声明
  e:\pyl\torch\include\torch\csrc\jit\constants.h(16): note: 参见“torch::jit::constant_not_supported_error”的声明
e:\pyl\torch\include\aten\core\jit_type.h(52): warning C4251: “std::enable_shared_from_this<c10::Type>::_Wptr”: class“std::weak_ptr<_Ty>”需要有 dll 接口由 class“std::enable_shared_from_this<c10::Type>”的客户端使用
          with
          [
              _Ty=c10::Type
          ]
  d:\program files (x86)\microsoft visual studio\preview\professional\vc\tools\msvc\14.11.25503\include\memory(1966): note: 参见“std::weak_ptr<_Ty>”的声明
          with
          [
              _Ty=c10::Type
          ]
e:\pyl\torch\include\aten\core\jit_type.h(213): warning C4251: “c10::SingleElementType<c10::TypeKind::OptionalType,c10::OptionalType>::elem”: class“std::shared_ptr<c10::Type>”需要有 dll 接口由 struct“c10::SingleElementType<c10::TypeKind::OptionalType,c10::OptionalType>”的客户端使用
  e:\pyl\torch\include\aten\core\jit_type.h(50): note: 参见“std::shared_ptr<c10::Type>”的声明
e:\pyl\torch\include\aten\core\jit_type.h(361): warning C4244: “参数”: 从“int64_t”转换到“int”，可能丢失数据
e:\pyl\torch\include\aten\core\jit_type.h(476): warning C4251: “c10::CompleteTensorType::sizes_”: class“std::vector<int64_t,std::allocator<_Ty>>”需要有 dll 接口由 struct“c10::CompleteTensorType”的客户端使用
          with
          [
              _Ty=int64_t
          ]
  e:\pyl\torch\include\c10\util\typeid.h(584): note: 参见“std::vector<int64_t,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=int64_t
          ]
e:\pyl\torch\include\aten\core\jit_type.h(477): warning C4251: “c10::CompleteTensorType::strides_”: class“std::vector<int64_t,std::allocator<_Ty>>”需要有 dll 接口由 struct“c10::CompleteTensorType”的客户端使用
          with
          [
              _Ty=int64_t
          ]
  e:\pyl\torch\include\c10\util\typeid.h(584): note: 参见“std::vector<int64_t,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=int64_t
          ]
e:\pyl\torch\include\aten\core\jit_type.h(463): warning C4267: “参数”: 从“size_t”转换到“int”，可能丢失数据
e:\pyl\torch\include\aten\core\jit_type.h(482): warning C4251: “c10::SingleElementType<c10::TypeKind::ListType,c10::ListType>::elem”: class“std::shared_ptr<c10::Type>”需要有 dll 接口由 struct“c10::SingleElementType<c10::TypeKind::ListType,c10::ListType>”的客户端使用
  e:\pyl\torch\include\aten\core\jit_type.h(50): note: 参见“std::shared_ptr<c10::Type>”的声明
e:\pyl\torch\include\aten\core\jit_type.h(516): warning C4251: “c10::SingleElementType<c10::TypeKind::FutureType,c10::FutureType>::elem”: class“std::shared_ptr<c10::Type>”需要有 dll 接口由 struct“c10::SingleElementType<c10::TypeKind::FutureType,c10::FutureType>”的客户端使用
  e:\pyl\torch\include\aten\core\jit_type.h(50): note: 参见“std::shared_ptr<c10::Type>”的声明
e:\pyl\torch\include\aten\core\jit_type.h(622): warning C4251: “c10::TupleType::elements_”: class“std::vector<c10::TypePtr,std::allocator<_Ty>>”需要有 dll 接口由 struct“c10::TupleType”的客户端使用
          with
          [
              _Ty=c10::TypePtr
          ]
  e:\pyl\torch\include\aten\core\jit_type.h(148): note: 参见“std::vector<c10::TypePtr,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=c10::TypePtr
          ]
e:\pyl\torch\include\torch\csrc\jit\tracing_state.h(29): warning C4251: “std::enable_shared_from_this<torch::jit::tracer::TracingState>::_Wptr”: class“std::weak_ptr<_Ty>”需要有 dll 接口由 class“std::enable_shared_from_this<torch::jit::tracer::TracingState>”的客户端使用
          with
          [
              _Ty=torch::jit::tracer::TracingState
          ]
  d:\program files (x86)\microsoft visual studio\preview\professional\vc\tools\msvc\14.11.25503\include\memory(1966): note: 参见“std::weak_ptr<_Ty>”的声明
          with
          [
              _Ty=torch::jit::tracer::TracingState
          ]
e:\pyl\torch\include\torch\csrc\jit\tracing_state.h(47): warning C4251: “torch::jit::tracer::TracingState::value_map”: class“std::unordered_map<torch::jit::tracer::TracingState::WeakTensor,torch::jit::Value *,torch::jit::tracer::TracingState::WeakTensorHasher,torch::jit::tracer::TracingState::WeakTensorEq,std::allocator<std::pair<const _Kty,_Ty>>>”需要有 dll 接口由 struct“torch::jit::tracer::TracingState”的客户端使用
          with
          [
              _Kty=torch::jit::tracer::TracingState::WeakTensor,
              _Ty=torch::jit::Value *
          ]
  e:\pyl\torch\include\torch\csrc\jit\tracing_state.h(47): note: 参见“std::unordered_map<torch::jit::tracer::TracingState::WeakTensor,torch::jit::Value *,torch::jit::tracer::TracingState::WeakTensorHasher,torch::jit::tracer::TracingState::WeakTensorEq,std::allocator<std::pair<const _Kty,_Ty>>>”的声明
          with
          [
              _Kty=torch::jit::tracer::TracingState::WeakTensor,
              _Ty=torch::jit::Value *
          ]
e:\pyl\torch\include\torch\csrc\jit\tracing_state.h(48): warning C4251: “torch::jit::tracer::TracingState::graph”: class“std::shared_ptr<torch::jit::Graph>”需要有 dll 接口由 struct“torch::jit::tracer::TracingState”的客户端使用
  e:\pyl\torch\include\torch\csrc\jit\tracing_state.h(48): note: 参见“std::shared_ptr<torch::jit::Graph>”的声明
e:\pyl\torch\include\torch\csrc\jit\tracing_state.h(52): warning C4251: “torch::jit::tracer::TracingState::lookup_var_name_fn”: class“std::function<std::string (const torch::autograd::Variable &)>”需要有 dll 接口由 struct“torch::jit::tracer::TracingState”的客户端使用
  e:\pyl\torch\include\torch\csrc\jit\tracing_state.h(51): note: 参见“std::function<std::string (const torch::autograd::Variable &)>”的声明
e:\pyl\torch\include\torch\csrc\jit\tracing_state.h(145): warning C4251: “torch::jit::tracer::NoWarn::state”: class“std::shared_ptr<_Ty>”需要有 dll 接口由 struct“torch::jit::tracer::NoWarn”的客户端使用
          with
          [
              _Ty=torch::jit::tracer::TracingState
          ]
  d:\program files (x86)\microsoft visual studio\preview\professional\vc\tools\msvc\14.11.25503\include\memory(1929): note: 参见“std::shared_ptr<_Ty>”的声明
          with
          [
              _Ty=torch::jit::tracer::TracingState
          ]
e:\pyl\torch\include\torch\csrc\api\include\torch\serialize\input-archive.h(78): warning C4251: “torch::serialize::InputArchive::module_”: class“std::shared_ptr<torch::jit::script::Module>”需要有 dll 接口由 class“torch::serialize::InputArchive”的客户端使用
  e:\pyl\torch\include\torch\csrc\api\include\torch\serialize\input-archive.h(78): note: 参见“std::shared_ptr<torch::jit::script::Module>”的声明
e:\pyl\torch\include\torch\csrc\api\include\torch\serialize\output-archive.h(66): warning C4251: “torch::serialize::OutputArchive::module_”: class“std::shared_ptr<torch::jit::script::Module>”需要有 dll 接口由 class“torch::serialize::OutputArchive”的客户端使用
  e:\pyl\torch\include\torch\csrc\api\include\torch\serialize\input-archive.h(78): note: 参见“std::shared_ptr<torch::jit::script::Module>”的声明
e:\pyl\torch\include\torch\csrc\jit\script\lexer.h(384): warning C4267: “参数”: 从“size_t”转换到“int32_t”，可能丢失数据
e:\pyl\torch\include\torch\csrc\jit\script\lexer.h(458): warning C4267: “初始化”: 从“size_t”转换到“int”，可能丢失数据
e:\pyl\torch\include\torch\csrc\jit\interpreter.h(42): warning C4251: “torch::jit::Code::pImpl”: class“std::shared_ptr<torch::jit::CodeImpl>”需要有 dll 接口由 struct“torch::jit::Code”的客户端使用
  e:\pyl\torch\include\torch\csrc\jit\interpreter.h(42): note: 参见“std::shared_ptr<torch::jit::CodeImpl>”的声明
e:\pyl\torch\include\torch\csrc\jit\argument_spec.h(189): warning C4267: “初始化”: 从“size_t”转换到“int32_t”，可能丢失数据
e:\pyl\torch\include\torch\csrc\jit\argument_spec.h(192): warning C4267: “初始化”: 从“size_t”转换到“int32_t”，可能丢失数据
e:\pyl\torch\include\torch\csrc\jit\argument_spec.h(192): warning C4267: “初始化”: 从“size_t”转换到“const int32_t”，可能丢失数据
e:\pyl\torch\include\torch\csrc\jit\argument_spec.h(196): warning C4244: “+=”: 从“int64_t”转换到“int32_t”，可能丢失数据
e:\pyl\torch\include\torch\csrc\jit\argument_spec.h(215): warning C4244: “+=”: 从“int64_t”转换到“int32_t”，可能丢失数据
e:\pyl\torch\include\torch\csrc\jit\argument_spec.h(367): warning C4267: “参数”: 从“size_t”转换到“const int”，可能丢失数据
e:\pyl\torch\include\torch\csrc\jit\graph_executor.h(41): warning C4251: “torch::jit::GraphExecutor::pImpl”: class“std::shared_ptr<torch::jit::GraphExecutorImpl>”需要有 dll 接口由 struct“torch::jit::GraphExecutor”的客户端使用
  e:\pyl\torch\include\torch\csrc\jit\graph_executor.h(41): note: 参见“std::shared_ptr<torch::jit::GraphExecutorImpl>”的声明
e:\pyl\torch\include\torch\csrc\jit\script\module.h(56): warning C4267: “初始化”: 从“size_t”转换到“int”，可能丢失数据
e:\pyl\torch\include\torch\csrc\jit\script\compiler.h(93): warning C4275: 非 dll 接口 struct“torch::jit::script::SugaredValue”用作 dll 接口 struct“torch::jit::script::SimpleValue”的基
  e:\pyl\torch\include\torch\csrc\jit\script\compiler.h(35): note: 参见“torch::jit::script::SugaredValue”的声明
  e:\pyl\torch\include\torch\csrc\jit\script\compiler.h(93): note: 参见“torch::jit::script::SimpleValue”的声明
e:\pyl\torch\include\torch\csrc\jit\script\compiler.h(122): warning C4275: 非 dll 接口 struct“torch::jit::script::SugaredValue”用作 dll 接口 struct“torch::jit::script::BuiltinFunction”的基
  e:\pyl\torch\include\torch\csrc\jit\script\compiler.h(35): note: 参见“torch::jit::script::SugaredValue”的声明
  e:\pyl\torch\include\torch\csrc\jit\script\compiler.h(122): note: 参见“torch::jit::script::BuiltinFunction”的声明
e:\pyl\torch\include\torch\csrc\jit\script\compiler.h(130): warning C4251: “torch::jit::script::BuiltinFunction::self”: class“c10::optional<torch::jit::NamedValue>”需要有 dll 接口由 struct“torch::jit::script::BuiltinFunction”的客户端使用
  e:\pyl\torch\include\torch\csrc\jit\script\module.h(479): note: 参见“c10::optional<torch::jit::NamedValue>”的声明
e:\pyl\torch\include\torch\csrc\jit\script\compiler.h(143): warning C4275: 非 dll 接口 struct“torch::jit::script::SugaredValue”用作 dll 接口 struct“torch::jit::script::BuiltinModule”的基
  e:\pyl\torch\include\torch\csrc\jit\script\compiler.h(35): note: 参见“torch::jit::script::SugaredValue”的声明
  e:\pyl\torch\include\torch\csrc\jit\script\compiler.h(143): note: 参见“torch::jit::script::BuiltinModule”的声明
e:\pyl\torch\include\torch\csrc\jit\script\compiler.h(157): warning C4251: “torch::jit::script::BuiltinModule::name”: class“std::basic_string<char,std::char_traits<char>,std::allocator<char>>”需要有 dll 接口由 struct“torch::jit::script::BuiltinModule”的客户端使用
  d:\program files (x86)\microsoft visual studio\preview\professional\vc\tools\msvc\14.11.25503\include\xstring(4079): note: 参见“std::basic_string<char,std::char_traits<char>,std::allocator<char>>”的声明
e:\pyl\torch\include\torch\csrc\jit\script\compiler.h(160): warning C4251: “torch::jit::script::BuiltinModule::version”: class“c10::optional<int64_t>”需要有 dll 接口由 struct“torch::jit::script::BuiltinModule”的客户端使用
  e:\pyl\torch\include\torch\csrc\jit\script\compiler.h(145): note: 参见“c10::optional<int64_t>”的声明
e:\pyl\torch\include\torch\csrc\jit\script\compiler.h(167): warning C4275: 非 dll 接口 struct“torch::jit::script::SugaredValue”用作 dll 接口 struct“torch::jit::script::ForkValue”的基
  e:\pyl\torch\include\torch\csrc\jit\script\compiler.h(35): note: 参见“torch::jit::script::SugaredValue”的声明
  e:\pyl\torch\include\torch\csrc\jit\script\compiler.h(167): note: 参见“torch::jit::script::ForkValue”的声明
e:\pyl\torch\include\torch\csrc\jit\script\compiler.h(173): warning C4275: 非 dll 接口 struct“torch::jit::script::SugaredValue”用作 dll 接口 struct“torch::jit::script::AnnotateValue”的基
  e:\pyl\torch\include\torch\csrc\jit\script\compiler.h(35): note: 参见“torch::jit::script::SugaredValue”的声明
  e:\pyl\torch\include\torch\csrc\jit\script\compiler.h(173): note: 参见“torch::jit::script::AnnotateValue”的声明
e:\pyl\torch\include\torch\csrc\api\include\torch\nn\module.h(61): warning C4251: “std::enable_shared_from_this<torch::nn::Module>::_Wptr”: class“std::weak_ptr<_Ty>”需要有 dll 接口由 class“std::enable_shared_from_this<torch::nn::Module>”的客户端使用
          with
          [
              _Ty=torch::nn::Module
          ]
  d:\program files (x86)\microsoft visual studio\preview\professional\vc\tools\msvc\14.11.25503\include\memory(1966): note: 参见“std::weak_ptr<_Ty>”的声明
          with
          [
              _Ty=torch::nn::Module
          ]
e:\pyl\torch\include\torch\csrc\api\include\torch\nn\module.h(483): warning C4251: “torch::nn::Module::parameters_”: class“torch::OrderedDict<std::string,at::Tensor>”需要有 dll 接口由 class“torch::nn::Module”的客户端使用
  e:\pyl\torch\include\torch\csrc\api\include\torch\nn\module.h(209): note: 参见“torch::OrderedDict<std::string,at::Tensor>”的声明
e:\pyl\torch\include\torch\csrc\api\include\torch\nn\module.h(486): warning C4251: “torch::nn::Module::buffers_”: class“torch::OrderedDict<std::string,at::Tensor>”需要有 dll 接口由 class“torch::nn::Module”的客户端使用
  e:\pyl\torch\include\torch\csrc\api\include\torch\nn\module.h(209): note: 参见“torch::OrderedDict<std::string,at::Tensor>”的声明
e:\pyl\torch\include\torch\csrc\api\include\torch\nn\module.h(489): warning C4251: “torch::nn::Module::children_”: class“torch::OrderedDict<std::string,std::shared_ptr<_Ty>>”需要有 dll 接口由 class“torch::nn::Module”的客户端使用
          with
          [
              _Ty=torch::nn::Module
          ]
  e:\pyl\torch\include\torch\csrc\api\include\torch\nn\module.h(245): note: 参见“torch::OrderedDict<std::string,std::shared_ptr<_Ty>>”的声明
          with
          [
              _Ty=torch::nn::Module
          ]
e:\pyl\torch\include\torch\csrc\api\include\torch\nn\module.h(492): warning C4251: “torch::nn::Module::name_”: class“c10::optional<std::string>”需要有 dll 接口由 class“torch::nn::Module”的客户端使用
  e:\pyl\torch\include\torch\csrc\jit\named_value.h(70): note: 参见“c10::optional<std::string>”的声明
e:\pyl\torch\include\torch\csrc\api\include\torch\nn\modules\conv.h(106): warning C4251: “torch::nn::ConvImpl<1,torch::nn::Conv1dImpl>::options”: struct“torch::nn::ConvOptions<1>”需要有 dll 接口由 class“torch::nn::ConvImpl<1,torch::nn::Conv1dImpl>”的客户端使用
  e:\pyl\torch\include\torch\csrc\api\include\torch\nn\modules\conv.h(87): note: 参见“torch::nn::ConvOptions<1>”的声明
e:\pyl\torch\include\torch\csrc\api\include\torch\nn\modules\conv.h(126): warning C4251: “torch::nn::ConvImpl<2,torch::nn::Conv2dImpl>::options”: struct“torch::nn::ConvOptions<2>”需要有 dll 接口由 class“torch::nn::ConvImpl<2,torch::nn::Conv2dImpl>”的客户端使用
  e:\pyl\torch\include\torch\csrc\api\include\torch\nn\modules\conv.h(87): note: 参见“torch::nn::ConvOptions<2>”的声明
e:\pyl\torch\include\torch\csrc\api\include\torch\nn\modules\conv.h(146): warning C4251: “torch::nn::ConvImpl<3,torch::nn::Conv3dImpl>::options”: struct“torch::nn::ConvOptions<3>”需要有 dll 接口由 class“torch::nn::ConvImpl<3,torch::nn::Conv3dImpl>”的客户端使用
  e:\pyl\torch\include\torch\csrc\api\include\torch\nn\modules\conv.h(87): note: 参见“torch::nn::ConvOptions<3>”的声明
e:\pyl\torch\include\torch\csrc\api\include\torch\nn\modules\functional.h(89): warning C4251: “torch::nn::FunctionalImpl::function_”: class“std::function<at::Tensor (at::Tensor)>”需要有 dll 接口由 class“torch::nn::FunctionalImpl”的客户端使用
  e:\pyl\torch\include\torch\csrc\api\include\torch\data\transforms\tensor.h(39): note: 参见“std::function<at::Tensor (at::Tensor)>”的声明
e:\pyl\torch\include\torch\csrc\api\include\torch\nn\modules\rnn.h(174): warning C4251: “torch::nn::detail::RNNImplBase<torch::nn::RNNImpl>::w_ih”: class“std::vector<at::Tensor,std::allocator<_Ty>>”需要有 dll 接口由 class“torch::nn::detail::RNNImplBase<torch::nn::RNNImpl>”的客户端使用
          with
          [
              _Ty=at::Tensor
          ]
  e:\pyl\torch\include\aten\core\type.h(227): note: 参见“std::vector<at::Tensor,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=at::Tensor
          ]
e:\pyl\torch\include\torch\csrc\api\include\torch\nn\modules\rnn.h(174): warning C4251: “torch::nn::detail::RNNImplBase<torch::nn::RNNImpl>::w_hh”: class“std::vector<at::Tensor,std::allocator<_Ty>>”需要有 dll 接口由 class“torch::nn::detail::RNNImplBase<torch::nn::RNNImpl>”的客户端使用
          with
          [
              _Ty=at::Tensor
          ]
  e:\pyl\torch\include\aten\core\type.h(227): note: 参见“std::vector<at::Tensor,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=at::Tensor
          ]
e:\pyl\torch\include\torch\csrc\api\include\torch\nn\modules\rnn.h(174): warning C4251: “torch::nn::detail::RNNImplBase<torch::nn::RNNImpl>::b_ih”: class“std::vector<at::Tensor,std::allocator<_Ty>>”需要有 dll 接口由 class“torch::nn::detail::RNNImplBase<torch::nn::RNNImpl>”的客户端使用
          with
          [
              _Ty=at::Tensor
          ]
  e:\pyl\torch\include\aten\core\type.h(227): note: 参见“std::vector<at::Tensor,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=at::Tensor
          ]
e:\pyl\torch\include\torch\csrc\api\include\torch\nn\modules\rnn.h(174): warning C4251: “torch::nn::detail::RNNImplBase<torch::nn::RNNImpl>::b_hh”: class“std::vector<at::Tensor,std::allocator<_Ty>>”需要有 dll 接口由 class“torch::nn::detail::RNNImplBase<torch::nn::RNNImpl>”的客户端使用
          with
          [
              _Ty=at::Tensor
          ]
  e:\pyl\torch\include\aten\core\type.h(227): note: 参见“std::vector<at::Tensor,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=at::Tensor
          ]
e:\pyl\torch\include\torch\csrc\api\include\torch\nn\modules\rnn.h(174): warning C4251: “torch::nn::detail::RNNImplBase<torch::nn::RNNImpl>::cudnn_mode_”: class“c10::optional<torch::nn::detail::RNNImplBase<torch::nn::RNNImpl>::CuDNNMode>”需要有 dll 接口由 class“torch::nn::detail::RNNImplBase<torch::nn::RNNImpl>”的客户端使用
  e:\pyl\torch\include\torch\csrc\api\include\torch\nn\modules\rnn.h(64): note: 参见“c10::optional<torch::nn::detail::RNNImplBase<torch::nn::RNNImpl>::CuDNNMode>”的声明
e:\pyl\torch\include\torch\csrc\api\include\torch\nn\modules\rnn.h(174): warning C4251: “torch::nn::detail::RNNImplBase<torch::nn::RNNImpl>::flat_weights_”: class“std::vector<at::Tensor,std::allocator<_Ty>>”需要有 dll 接口由 class“torch::nn::detail::RNNImplBase<torch::nn::RNNImpl>”的客户端使用
          with
          [
              _Ty=at::Tensor
          ]
  e:\pyl\torch\include\aten\core\type.h(227): note: 参见“std::vector<at::Tensor,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=at::Tensor
          ]
e:\pyl\torch\include\torch\csrc\api\include\torch\nn\modules\rnn.h(202): warning C4251: “torch::nn::detail::RNNImplBase<torch::nn::LSTMImpl>::w_ih”: class“std::vector<at::Tensor,std::allocator<_Ty>>”需要有 dll 接口由 class“torch::nn::detail::RNNImplBase<torch::nn::LSTMImpl>”的客户端使用
          with
          [
              _Ty=at::Tensor
          ]
  e:\pyl\torch\include\aten\core\type.h(227): note: 参见“std::vector<at::Tensor,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=at::Tensor
          ]
e:\pyl\torch\include\torch\csrc\api\include\torch\nn\modules\rnn.h(202): warning C4251: “torch::nn::detail::RNNImplBase<torch::nn::LSTMImpl>::w_hh”: class“std::vector<at::Tensor,std::allocator<_Ty>>”需要有 dll 接口由 class“torch::nn::detail::RNNImplBase<torch::nn::LSTMImpl>”的客户端使用
          with
          [
              _Ty=at::Tensor
          ]
  e:\pyl\torch\include\aten\core\type.h(227): note: 参见“std::vector<at::Tensor,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=at::Tensor
          ]
e:\pyl\torch\include\torch\csrc\api\include\torch\nn\modules\rnn.h(202): warning C4251: “torch::nn::detail::RNNImplBase<torch::nn::LSTMImpl>::b_ih”: class“std::vector<at::Tensor,std::allocator<_Ty>>”需要有 dll 接口由 class“torch::nn::detail::RNNImplBase<torch::nn::LSTMImpl>”的客户端使用
          with
          [
              _Ty=at::Tensor
          ]
  e:\pyl\torch\include\aten\core\type.h(227): note: 参见“std::vector<at::Tensor,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=at::Tensor
          ]
e:\pyl\torch\include\torch\csrc\api\include\torch\nn\modules\rnn.h(202): warning C4251: “torch::nn::detail::RNNImplBase<torch::nn::LSTMImpl>::b_hh”: class“std::vector<at::Tensor,std::allocator<_Ty>>”需要有 dll 接口由 class“torch::nn::detail::RNNImplBase<torch::nn::LSTMImpl>”的客户端使用
          with
          [
              _Ty=at::Tensor
          ]
  e:\pyl\torch\include\aten\core\type.h(227): note: 参见“std::vector<at::Tensor,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=at::Tensor
          ]
e:\pyl\torch\include\torch\csrc\api\include\torch\nn\modules\rnn.h(202): warning C4251: “torch::nn::detail::RNNImplBase<torch::nn::LSTMImpl>::cudnn_mode_”: class“c10::optional<torch::nn::detail::RNNImplBase<torch::nn::LSTMImpl>::CuDNNMode>”需要有 dll 接口由 class“torch::nn::detail::RNNImplBase<torch::nn::LSTMImpl>”的客户端使用
  e:\pyl\torch\include\torch\csrc\api\include\torch\nn\modules\rnn.h(64): note: 参见“c10::optional<torch::nn::detail::RNNImplBase<torch::nn::LSTMImpl>::CuDNNMode>”的声明
e:\pyl\torch\include\torch\csrc\api\include\torch\nn\modules\rnn.h(202): warning C4251: “torch::nn::detail::RNNImplBase<torch::nn::LSTMImpl>::flat_weights_”: class“std::vector<at::Tensor,std::allocator<_Ty>>”需要有 dll 接口由 class“torch::nn::detail::RNNImplBase<torch::nn::LSTMImpl>”的客户端使用
          with
          [
              _Ty=at::Tensor
          ]
  e:\pyl\torch\include\aten\core\type.h(227): note: 参见“std::vector<at::Tensor,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=at::Tensor
          ]
e:\pyl\torch\include\torch\csrc\api\include\torch\nn\modules\rnn.h(228): warning C4251: “torch::nn::detail::RNNImplBase<torch::nn::GRUImpl>::w_ih”: class“std::vector<at::Tensor,std::allocator<_Ty>>”需要有 dll 接口由 class“torch::nn::detail::RNNImplBase<torch::nn::GRUImpl>”的客户端使用
          with
          [
              _Ty=at::Tensor
          ]
  e:\pyl\torch\include\aten\core\type.h(227): note: 参见“std::vector<at::Tensor,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=at::Tensor
          ]
e:\pyl\torch\include\torch\csrc\api\include\torch\nn\modules\rnn.h(228): warning C4251: “torch::nn::detail::RNNImplBase<torch::nn::GRUImpl>::w_hh”: class“std::vector<at::Tensor,std::allocator<_Ty>>”需要有 dll 接口由 class“torch::nn::detail::RNNImplBase<torch::nn::GRUImpl>”的客户端使用
          with
          [
              _Ty=at::Tensor
          ]
  e:\pyl\torch\include\aten\core\type.h(227): note: 参见“std::vector<at::Tensor,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=at::Tensor
          ]
e:\pyl\torch\include\torch\csrc\api\include\torch\nn\modules\rnn.h(228): warning C4251: “torch::nn::detail::RNNImplBase<torch::nn::GRUImpl>::b_ih”: class“std::vector<at::Tensor,std::allocator<_Ty>>”需要有 dll 接口由 class“torch::nn::detail::RNNImplBase<torch::nn::GRUImpl>”的客户端使用
          with
          [
              _Ty=at::Tensor
          ]
  e:\pyl\torch\include\aten\core\type.h(227): note: 参见“std::vector<at::Tensor,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=at::Tensor
          ]
e:\pyl\torch\include\torch\csrc\api\include\torch\nn\modules\rnn.h(228): warning C4251: “torch::nn::detail::RNNImplBase<torch::nn::GRUImpl>::b_hh”: class“std::vector<at::Tensor,std::allocator<_Ty>>”需要有 dll 接口由 class“torch::nn::detail::RNNImplBase<torch::nn::GRUImpl>”的客户端使用
          with
          [
              _Ty=at::Tensor
          ]
  e:\pyl\torch\include\aten\core\type.h(227): note: 参见“std::vector<at::Tensor,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=at::Tensor
          ]
e:\pyl\torch\include\torch\csrc\api\include\torch\nn\modules\rnn.h(228): warning C4251: “torch::nn::detail::RNNImplBase<torch::nn::GRUImpl>::cudnn_mode_”: class“c10::optional<torch::nn::detail::RNNImplBase<torch::nn::GRUImpl>::CuDNNMode>”需要有 dll 接口由 class“torch::nn::detail::RNNImplBase<torch::nn::GRUImpl>”的客户端使用
  e:\pyl\torch\include\torch\csrc\api\include\torch\nn\modules\rnn.h(64): note: 参见“c10::optional<torch::nn::detail::RNNImplBase<torch::nn::GRUImpl>::CuDNNMode>”的声明
e:\pyl\torch\include\torch\csrc\api\include\torch\nn\modules\rnn.h(228): warning C4251: “torch::nn::detail::RNNImplBase<torch::nn::GRUImpl>::flat_weights_”: class“std::vector<at::Tensor,std::allocator<_Ty>>”需要有 dll 接口由 class“torch::nn::detail::RNNImplBase<torch::nn::GRUImpl>”的客户端使用
          with
          [
              _Ty=at::Tensor
          ]
  e:\pyl\torch\include\aten\core\type.h(227): note: 参见“std::vector<at::Tensor,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=at::Tensor
          ]
e:\pyl\torch\include\torch\csrc\api\include\torch\optim\optimizer.h(80): warning C4251: “torch::optim::detail::OptimizerBase::parameters_”: class“std::vector<at::Tensor,std::allocator<_Ty>>”需要有 dll 接口由 class“torch::optim::detail::OptimizerBase”的客户端使用
          with
          [
              _Ty=at::Tensor
          ]
  e:\pyl\torch\include\aten\core\type.h(227): note: 参见“std::vector<at::Tensor,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=at::Tensor
          ]
e:\pyl\torch\include\torch\csrc\api\include\torch\optim\adagrad.h(28): warning C4275: 非 dll 接口 class“torch::optim::Optimizer”用作 dll 接口 class“torch::optim::Adagrad”的基
  e:\pyl\torch\include\torch\csrc\api\include\torch\optim\optimizer.h(97): note: 参见“torch::optim::Optimizer”的声明
  e:\pyl\torch\include\torch\csrc\api\include\torch\optim\adagrad.h(28): note: 参见“torch::optim::Adagrad”的声明
e:\pyl\torch\include\torch\csrc\api\include\torch\optim\adagrad.h(44): warning C4251: “torch::optim::Adagrad::sum_buffers”: class“std::vector<at::Tensor,std::allocator<_Ty>>”需要有 dll 接口由 class“torch::optim::Adagrad”的客户端使用
          with
          [
              _Ty=at::Tensor
          ]
  e:\pyl\torch\include\aten\core\type.h(227): note: 参见“std::vector<at::Tensor,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=at::Tensor
          ]
e:\pyl\torch\include\torch\csrc\api\include\torch\optim\adagrad.h(45): warning C4251: “torch::optim::Adagrad::step_buffers”: class“std::vector<int64_t,std::allocator<_Ty>>”需要有 dll 接口由 class“torch::optim::Adagrad”的客户端使用
          with
          [
              _Ty=int64_t
          ]
  e:\pyl\torch\include\c10\util\typeid.h(584): note: 参见“std::vector<int64_t,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=int64_t
          ]
e:\pyl\torch\include\torch\csrc\api\include\torch\optim\adam.h(31): warning C4275: 非 dll 接口 class“torch::optim::Optimizer”用作 dll 接口 class“torch::optim::Adam”的基
  e:\pyl\torch\include\torch\csrc\api\include\torch\optim\optimizer.h(97): note: 参见“torch::optim::Optimizer”的声明
  e:\pyl\torch\include\torch\csrc\api\include\torch\optim\adam.h(31): note: 参见“torch::optim::Adam”的声明
e:\pyl\torch\include\torch\csrc\api\include\torch\optim\adam.h(45): warning C4251: “torch::optim::Adam::step_buffers”: class“std::vector<int64_t,std::allocator<_Ty>>”需要有 dll 接口由 class“torch::optim::Adam”的客户端使用
          with
          [
              _Ty=int64_t
          ]
  e:\pyl\torch\include\c10\util\typeid.h(584): note: 参见“std::vector<int64_t,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=int64_t
          ]
e:\pyl\torch\include\torch\csrc\api\include\torch\optim\adam.h(46): warning C4251: “torch::optim::Adam::exp_average_buffers”: class“std::vector<at::Tensor,std::allocator<_Ty>>”需要有 dll 接口由 class“torch::optim::Adam”的客户端使用
          with
          [
              _Ty=at::Tensor
          ]
  e:\pyl\torch\include\aten\core\type.h(227): note: 参见“std::vector<at::Tensor,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=at::Tensor
          ]
e:\pyl\torch\include\torch\csrc\api\include\torch\optim\adam.h(47): warning C4251: “torch::optim::Adam::exp_average_sq_buffers”: class“std::vector<at::Tensor,std::allocator<_Ty>>”需要有 dll 接口由 class“torch::optim::Adam”的客户端使用
          with
          [
              _Ty=at::Tensor
          ]
  e:\pyl\torch\include\aten\core\type.h(227): note: 参见“std::vector<at::Tensor,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=at::Tensor
          ]
e:\pyl\torch\include\torch\csrc\api\include\torch\optim\adam.h(48): warning C4251: “torch::optim::Adam::max_exp_average_sq_buffers”: class“std::vector<at::Tensor,std::allocator<_Ty>>”需要有 dll 接口由 class“torch::optim::Adam”的客户端使用
          with
          [
              _Ty=at::Tensor
          ]
  e:\pyl\torch\include\aten\core\type.h(227): note: 参见“std::vector<at::Tensor,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=at::Tensor
          ]
e:\pyl\torch\include\torch\csrc\api\include\torch\optim\lbfgs.h(22): warning C4305: “初始化”: 从“double”到“float”截断
e:\pyl\torch\include\torch\csrc\api\include\torch\optim\lbfgs.h(23): warning C4305: “初始化”: 从“double”到“float”截断
e:\pyl\torch\include\torch\csrc\api\include\torch\optim\lbfgs.h(27): warning C4275: 非 dll 接口 class“torch::optim::LossClosureOptimizer”用作 dll 接口 class“torch::optim::LBFGS”的基
  e:\pyl\torch\include\torch\csrc\api\include\torch\optim\optimizer.h(107): note: 参见“torch::optim::LossClosureOptimizer”的声明
  e:\pyl\torch\include\torch\csrc\api\include\torch\optim\lbfgs.h(27): note: 参见“torch::optim::LBFGS”的声明
e:\pyl\torch\include\torch\csrc\api\include\torch\optim\lbfgs.h(48): warning C4251: “torch::optim::LBFGS::ro”: class“std::vector<at::Tensor,std::allocator<_Ty>>”需要有 dll 接口由 class“torch::optim::LBFGS”的客户端使用
          with
          [
              _Ty=at::Tensor
          ]
  e:\pyl\torch\include\aten\core\type.h(227): note: 参见“std::vector<at::Tensor,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=at::Tensor
          ]
e:\pyl\torch\include\torch\csrc\api\include\torch\optim\lbfgs.h(49): warning C4251: “torch::optim::LBFGS::al”: class“std::vector<at::Tensor,std::allocator<_Ty>>”需要有 dll 接口由 class“torch::optim::LBFGS”的客户端使用
          with
          [
              _Ty=at::Tensor
          ]
  e:\pyl\torch\include\aten\core\type.h(227): note: 参见“std::vector<at::Tensor,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=at::Tensor
          ]
e:\pyl\torch\include\torch\csrc\api\include\torch\optim\lbfgs.h(50): warning C4251: “torch::optim::LBFGS::old_dirs”: class“std::deque<at::Tensor,std::allocator<_Ty>>”需要有 dll 接口由 class“torch::optim::LBFGS”的客户端使用
          with
          [
              _Ty=at::Tensor
          ]
  e:\pyl\torch\include\torch\csrc\api\include\torch\optim\lbfgs.h(50): note: 参见“std::deque<at::Tensor,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=at::Tensor
          ]
e:\pyl\torch\include\torch\csrc\api\include\torch\optim\lbfgs.h(51): warning C4251: “torch::optim::LBFGS::old_stps”: class“std::deque<at::Tensor,std::allocator<_Ty>>”需要有 dll 接口由 class“torch::optim::LBFGS”的客户端使用
          with
          [
              _Ty=at::Tensor
          ]
  e:\pyl\torch\include\torch\csrc\api\include\torch\optim\lbfgs.h(50): note: 参见“std::deque<at::Tensor,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=at::Tensor
          ]
e:\pyl\torch\include\torch\csrc\api\include\torch\optim\rmsprop.h(34): warning C4275: 非 dll 接口 class“torch::optim::Optimizer”用作 dll 接口 class“torch::optim::RMSprop”的基
  e:\pyl\torch\include\torch\csrc\api\include\torch\optim\optimizer.h(97): note: 参见“torch::optim::Optimizer”的声明
  e:\pyl\torch\include\torch\csrc\api\include\torch\optim\rmsprop.h(34): note: 参见“torch::optim::RMSprop”的声明
e:\pyl\torch\include\torch\csrc\api\include\torch\optim\rmsprop.h(50): warning C4251: “torch::optim::RMSprop::square_average_buffers”: class“std::vector<at::Tensor,std::allocator<_Ty>>”需要有 dll 接口由 class“torch::optim::RMSprop”的客户端使用
          with
          [
              _Ty=at::Tensor
          ]
  e:\pyl\torch\include\aten\core\type.h(227): note: 参见“std::vector<at::Tensor,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=at::Tensor
          ]
e:\pyl\torch\include\torch\csrc\api\include\torch\optim\rmsprop.h(51): warning C4251: “torch::optim::RMSprop::momentum_buffers”: class“std::vector<at::Tensor,std::allocator<_Ty>>”需要有 dll 接口由 class“torch::optim::RMSprop”的客户端使用
          with
          [
              _Ty=at::Tensor
          ]
  e:\pyl\torch\include\aten\core\type.h(227): note: 参见“std::vector<at::Tensor,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=at::Tensor
          ]
e:\pyl\torch\include\torch\csrc\api\include\torch\optim\rmsprop.h(52): warning C4251: “torch::optim::RMSprop::grad_average_buffers”: class“std::vector<at::Tensor,std::allocator<_Ty>>”需要有 dll 接口由 class“torch::optim::RMSprop”的客户端使用
          with
          [
              _Ty=at::Tensor
          ]
  e:\pyl\torch\include\aten\core\type.h(227): note: 参见“std::vector<at::Tensor,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=at::Tensor
          ]
e:\pyl\torch\include\torch\csrc\api\include\torch\optim\sgd.h(31): warning C4275: 非 dll 接口 class“torch::optim::Optimizer”用作 dll 接口 class“torch::optim::SGD”的基
  e:\pyl\torch\include\torch\csrc\api\include\torch\optim\optimizer.h(97): note: 参见“torch::optim::Optimizer”的声明
  e:\pyl\torch\include\torch\csrc\api\include\torch\optim\sgd.h(31): note: 参见“torch::optim::SGD”的声明
e:\pyl\torch\include\torch\csrc\api\include\torch\optim\sgd.h(45): warning C4251: “torch::optim::SGD::momentum_buffers”: class“std::vector<at::Tensor,std::allocator<_Ty>>”需要有 dll 接口由 class“torch::optim::SGD”的客户端使用
          with
          [
              _Ty=at::Tensor
          ]
  e:\pyl\torch\include\aten\core\type.h(227): note: 参见“std::vector<at::Tensor,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=at::Tensor
          ]
e:\pyl\torchlearn\torchlearn\darknet.cpp(177): warning C4244: “初始化”: 从“int64_t”转换到“int”，可能丢失数据
e:\pyl\torchlearn\torchlearn\darknet.cpp(178): warning C4244: “初始化”: 从“double”转换到“int”，可能丢失数据
e:\pyl\torchlearn\torchlearn\darknet.cpp(179): warning C4244: “初始化”: 从“double”转换到“int”，可能丢失数据
e:\pyl\torchlearn\torchlearn\darknet.cpp(181): warning C4267: “初始化”: 从“size_t”转换到“int”，可能丢失数据
e:\pyl\torchlearn\torchlearn\darknet.cpp(276): warning C4267: “初始化”: 从“size_t”转换到“int”，可能丢失数据
e:\pyl\torchlearn\torchlearn\darknet.cpp(374): warning C4244: “参数”: 从“int32_t”转换到“const float”，可能丢失数据
e:\pyl\torchlearn\torchlearn\darknet.cpp(375): warning C4244: “参数”: 从“int32_t”转换到“const float”，可能丢失数据
e:\pyl\torchlearn\torchlearn\darknet.cpp(332): warning C4101: “sz”: 未引用的局部变量
e:\pyl\torchlearn\torchlearn\darknet.cpp(449): warning C4244: “初始化”: 从“int64_t”转换到“int”，可能丢失数据
e:\pyl\torchlearn\torchlearn\darknet.cpp(475): warning C4244: “初始化”: 从“int64_t”转换到“int”，可能丢失数据
e:\pyl\torchlearn\torchlearn\darknet.cpp(484): warning C4244: “初始化”: 从“int64_t”转换到“int”，可能丢失数据
e:\pyl\torchlearn\torchlearn\darknet.cpp(498): warning C4267: “初始化”: 从“size_t”转换到“int”，可能丢失数据
e:\pyl\torchlearn\torchlearn\darknet.cpp(598): warning C4244: “初始化”: 从“int64_t”转换到“int”，可能丢失数据
e:\pyl\torchlearn\torchlearn\darknet.cpp(630): warning C4244: “初始化”: 从“int64_t”转换到“int”，可能丢失数据
e:\pyl\torchlearn\torchlearn\darknet.cpp(666): warning C4244: “初始化”: 从“int64_t”转换到“int”，可能丢失数据
e:\pyl\torch\include\c10\util\optional.h(430): warning C4267: “参数”: 从“size_t”转换到“int”，可能丢失数据
  e:\pyl\torch\include\aten\core\function_schema.h(131): note: 参见对正在编译的函数 模板 实例化“c10::optional<int32_t>::optional<::size_t,false>(U &&)”的引用
          with
          [
              U=::size_t
          ]
  e:\pyl\torch\include\aten\core\function_schema.h(131): note: 参见对正在编译的函数 模板 实例化“c10::optional<int32_t>::optional<::size_t,false>(U &&)”的引用
          with
          [
              U=::size_t
          ]
e:\pyl\torch\include\c10\half.h(366): warning C4244: “参数”: 从“int64_t”转换到“const std::complex<double>::_Ty”，可能丢失数据
  e:\pyl\torch\include\c10\half.h(365): note: 编译 类 模板 成员函数 "std::complex<double> c10::Converter<To,From,void>::operator ()(From)" 时
          with
          [
              To=std::complex<double>,
              From=int64_t
          ]
  e:\pyl\torch\include\c10\half.h(372): note: 参见对正在编译的函数 模板 实例化“std::complex<double> c10::Converter<To,From,void>::operator ()(From)”的引用
          with
          [
              To=std::complex<double>,
              From=int64_t
          ]
  e:\pyl\torch\include\c10\half.h(372): note: 参见对正在编译的 类 模板 实例化 "c10::Converter<To,From,void>" 的引用
          with
          [
              To=std::complex<double>,
              From=int64_t
          ]
  e:\pyl\torch\include\c10\half.h(443): note: 参见对正在编译的函数 模板 实例化“To c10::convert<To,From>(From)”的引用
          with
          [
              To=std::complex<double>,
              From=int64_t
          ]
  e:\pyl\torch\include\c10\core\scalar.h(60): note: 参见对正在编译的函数 模板 实例化“To c10::checked_convert<std::complex<double>,int64_t>(From,const char *)”的引用
          with
          [
              To=std::complex<double>,
              From=int64_t
          ]
e:\pyl\torch\include\c10\half.h(366): warning C4244: “参数”: 从“int64_t”转换到“const std::complex<float>::_Ty”，可能丢失数据
  e:\pyl\torch\include\c10\half.h(365): note: 编译 类 模板 成员函数 "std::complex<float> c10::Converter<To,From,void>::operator ()(From)" 时
          with
          [
              To=std::complex<float>,
              From=int64_t
          ]
  e:\pyl\torch\include\c10\half.h(372): note: 参见对正在编译的函数 模板 实例化“std::complex<float> c10::Converter<To,From,void>::operator ()(From)”的引用
          with
          [
              To=std::complex<float>,
              From=int64_t
          ]
  e:\pyl\torch\include\c10\half.h(372): note: 参见对正在编译的 类 模板 实例化 "c10::Converter<To,From,void>" 的引用
          with
          [
              To=std::complex<float>,
              From=int64_t
          ]
  e:\pyl\torch\include\c10\half.h(443): note: 参见对正在编译的函数 模板 实例化“To c10::convert<To,From>(From)”的引用
          with
          [
              To=std::complex<float>,
              From=int64_t
          ]
  e:\pyl\torch\include\c10\core\scalar.h(60): note: 参见对正在编译的函数 模板 实例化“To c10::checked_convert<std::complex<float>,int64_t>(From,const char *)”的引用
          with
          [
              To=std::complex<float>,
              From=int64_t
          ]
e:\pyl\torch\include\c10\half.h(366): warning C4244: “参数”: 从“double”转换到“const std::complex<float>::_Ty”，可能丢失数据
  e:\pyl\torch\include\c10\half.h(365): note: 编译 类 模板 成员函数 "std::complex<float> c10::Converter<To,From,void>::operator ()(From)" 时
          with
          [
              To=std::complex<float>,
              From=double
          ]
  e:\pyl\torch\include\c10\half.h(372): note: 参见对正在编译的函数 模板 实例化“std::complex<float> c10::Converter<To,From,void>::operator ()(From)”的引用
          with
          [
              To=std::complex<float>,
              From=double
          ]
  e:\pyl\torch\include\c10\half.h(372): note: 参见对正在编译的 类 模板 实例化 "c10::Converter<To,From,void>" 的引用
          with
          [
              To=std::complex<float>,
              From=double
          ]
  e:\pyl\torch\include\c10\half.h(443): note: 参见对正在编译的函数 模板 实例化“To c10::convert<To,From>(From)”的引用
          with
          [
              To=std::complex<float>,
              From=double
          ]
  e:\pyl\torch\include\c10\core\scalar.h(60): note: 参见对正在编译的函数 模板 实例化“To c10::checked_convert<std::complex<float>,double>(From,const char *)”的引用
          with
          [
              To=std::complex<float>,
              From=double
          ]
e:\pyl\torch\include\c10\half.h(366): warning C4244: “参数”: 从“int64_t”转换到“float”，可能丢失数据
  e:\pyl\torch\include\c10\half.h(365): note: 编译 类 模板 成员函数 "c10::Half c10::Converter<To,From,void>::operator ()(From)" 时
          with
          [
              To=c10::Half,
              From=int64_t
          ]
  e:\pyl\torch\include\c10\half.h(372): note: 参见对正在编译的函数 模板 实例化“c10::Half c10::Converter<To,From,void>::operator ()(From)”的引用
          with
          [
              To=c10::Half,
              From=int64_t
          ]
  e:\pyl\torch\include\c10\half.h(372): note: 参见对正在编译的 类 模板 实例化 "c10::Converter<To,From,void>" 的引用
          with
          [
              To=c10::Half,
              From=int64_t
          ]
  e:\pyl\torch\include\c10\half.h(443): note: 参见对正在编译的函数 模板 实例化“To c10::convert<To,From>(From)”的引用
          with
          [
              To=c10::Half,
              From=int64_t
          ]
  e:\pyl\torch\include\c10\core\scalar.h(60): note: 参见对正在编译的函数 模板 实例化“To c10::checked_convert<c10::Half,int64_t>(From,const char *)”的引用
          with
          [
              To=c10::Half,
              From=int64_t
          ]
e:\pyl\torch\include\c10\half.h(382): warning C4244: “参数”: 从“double”转换到“float”，可能丢失数据
  e:\pyl\torch\include\c10\half.h(381): note: 编译 类 模板 成员函数 "c10::Half c10::Converter<To,From,void>::operator ()(std::complex<double>)" 时
          with
          [
              To=c10::Half,
              From=std::complex<double>
          ]
  e:\pyl\torch\include\c10\half.h(372): note: 参见对正在编译的函数 模板 实例化“c10::Half c10::Converter<To,From,void>::operator ()(std::complex<double>)”的引用
          with
          [
              To=c10::Half,
              From=std::complex<double>
          ]
  e:\pyl\torch\include\c10\half.h(372): note: 参见对正在编译的 类 模板 实例化 "c10::Converter<To,From,void>" 的引用
          with
          [
              To=c10::Half,
              From=std::complex<double>
          ]
  e:\pyl\torch\include\c10\half.h(443): note: 参见对正在编译的函数 模板 实例化“To c10::convert<To,From>(From)”的引用
          with
          [
              To=c10::Half,
              From=std::complex<double>
          ]
  e:\pyl\torch\include\c10\core\scalar.h(60): note: 参见对正在编译的函数 模板 实例化“To c10::checked_convert<c10::Half,std::complex<double>>(From,const char *)”的引用
          with
          [
              To=c10::Half,
              From=std::complex<double>
          ]
e:\pyl\torch\include\c10\half.h(366): warning C4244: “参数”: 从“double”转换到“float”，可能丢失数据
  e:\pyl\torch\include\c10\half.h(365): note: 编译 类 模板 成员函数 "c10::Half c10::Converter<To,From,void>::operator ()(From)" 时
          with
          [
              To=c10::Half,
              From=double
          ]
  e:\pyl\torch\include\c10\half.h(372): note: 参见对正在编译的函数 模板 实例化“c10::Half c10::Converter<To,From,void>::operator ()(From)”的引用
          with
          [
              To=c10::Half,
              From=double
          ]
  e:\pyl\torch\include\c10\half.h(372): note: 参见对正在编译的 类 模板 实例化 "c10::Converter<To,From,void>" 的引用
          with
          [
              To=c10::Half,
              From=double
          ]
  e:\pyl\torch\include\c10\half.h(443): note: 参见对正在编译的函数 模板 实例化“To c10::convert<To,From>(From)”的引用
          with
          [
              To=c10::Half,
              From=double
          ]
  e:\pyl\torch\include\c10\core\scalar.h(60): note: 参见对正在编译的函数 模板 实例化“To c10::checked_convert<c10::Half,double>(From,const char *)”的引用
          with
          [
              To=c10::Half,
              From=double
          ]
e:\pyl\torchlearn\torchlearn\darknet.cpp(400): warning C4715: “Darknet::get_net_info”: 不是所有的控件路径都返回值
    正在创建库 E:\PyL\torchLearn\x64\Debug\torchLearn.lib 和对象 E:\PyL\torchLearn\x64\Debug\torchLearn.exp
  torchLearn.vcxproj -> E:\PyL\torchLearn\x64\Debug\torchLearn.exe
